/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Taglog.java
 *
 * Created on Feb 8, 2022, 1:14:15 PM
 */
package View.subUI.FormDetail.TabLog;

import View.subUI.FormDetail.AbsTabUI;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author Administrator
 */
public class Tablog extends AbsTabUI {

    private final DefaultCaret caret;

    public Tablog(String type) {
        super("Log", type, 1000);
        initComponents();
        this.caret = (DefaultCaret) this.textLog.getCaret();
        autoCrolls();
    }

    private void goToLine(int index) {
        textLog.setCaretPosition(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        textLog = new javax.swing.JTextArea();

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        textLog.setColumns(30);
        textLog.setEditable(false);
        textLog.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textLog.setRows(5);
        textLog.setName("textLog"); // NOI18N
        textLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                textLogMouseClicked(evt);
            }
        });
        textLog.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textLogKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(textLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 203, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void textLogKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textLogKeyTyped
// TODO add your handling code here:
}//GEN-LAST:event_textLogKeyTyped

private void textLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textLogMouseClicked
// TODO add your handling code here:
    mouseEvent(evt);
}//GEN-LAST:event_textLogMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea textLog;
    // End of variables declaration//GEN-END:variables

    public void mouseEvent(MouseEvent evt) {
        if (this.isVisible()) {
            if (evt.getClickCount() > 1) {
                if (evt.getButton() == MouseEvent.BUTTON3) {
                    autoCrolls();
                }
            }

        }
    }

    private void autoCrolls() {
        goToLine(this.textLog.getDocument().getLength());
        this.caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }

    private void offAutoCrolls() {
        this.caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
    }

    private boolean findAndHighLight(String regex) {
        Highlighter highlighter = this.textLog.getHighlighter();
        highlighter.removeAllHighlights();
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(this.textLog.getText());
        boolean result = false;
        while (matcher.find()) {
            result = true;
            int start = matcher.start();
            int end = matcher.end();
            try {
                goToLine(start);
                highlighter.addHighlight(start, end, DefaultHighlighter.DefaultPainter);
            } catch (BadLocationException ex) {
                ex.printStackTrace();
            }
        }
        return result;
    }

    @Override
    public void keyEvent(KeyEvent evt) {
    }

    @Override
    public void updateData() {
    }
}
