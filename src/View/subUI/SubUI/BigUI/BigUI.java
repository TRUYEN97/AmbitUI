/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.subUI.SubUI.BigUI;

import Model.DataTest.FunctionData.FunctionData;
import View.subUI.SubUI.AbsSubUi;
import java.util.List;

/**
 *
 * @author Administrator
 */
public class BigUI extends AbsSubUi {

    private List<FunctionData> list;
    protected boolean debugMode;

    /**
     * Creates new form BigUI
     *
     * @param indexName
     */
    public BigUI(String indexName) {
        super(indexName, 500);
        initComponents();
        this.PanelUp.add(this.tabDetail);
    }

    @Override
    public void startTest() {
        this.list = uiStatus.getProcessData().getDataBoxs();
        int checkFunc = this.uiStatus.getModeTest().getModeTestSource().getCheckFunctions().size();
        int testFunc = this.uiStatus.getModeTest().getModeTestSource().getTestFunctions().size();
        int endFunc = this.uiStatus.getModeTest().getModeTestSource().getEndFunctions().size();
        this.Process.setMaximum(checkFunc + testFunc + endFunc);
        this.btTest.setEnabled(false);
        super.startTest();
    }

    @Override
    public boolean update() {
        debugMode = this.uiStatus.getModeTest().canDebug();
        this.btTest.setEnabled(debugMode);
        return super.update(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }
    

    @Override
    public void endTest() {
        updateData();
        this.Process.setValue(this.Process.getMaximum());
        super.endTest(); 
        this.btTest.setEnabled(debugMode);
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelUp = new javax.swing.JPanel();
        panelDown = new javax.swing.JPanel();
        Process = new javax.swing.JProgressBar();
        lbItemName = new javax.swing.JLabel();
        btTest = new javax.swing.JButton();
        lbTime = new javax.swing.JLabel();

        PanelUp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PanelUpKeyTyped(evt);
            }
        });
        PanelUp.setLayout(new java.awt.BorderLayout());

        panelDown.setBackground(new java.awt.Color(204, 204, 255));

        Process.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Process.setOpaque(true);
        Process.setStringPainted(true);

        lbItemName.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbItemName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbItemName.setText("...");
        lbItemName.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        btTest.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btTest.setText("Debug");
        btTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTestActionPerformed(evt);
            }
        });

        lbTime.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTime.setText("00:00");

        javax.swing.GroupLayout panelDownLayout = new javax.swing.GroupLayout(panelDown);
        panelDown.setLayout(panelDownLayout);
        panelDownLayout.setHorizontalGroup(
            panelDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDownLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Process, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(lbItemName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btTest, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lbTime, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelDownLayout.setVerticalGroup(
            panelDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDownLayout.createSequentialGroup()
                .addGroup(panelDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDownLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lbTime))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDownLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbItemName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Process, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelUp, javax.swing.GroupLayout.DEFAULT_SIZE, 6, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(panelDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTestActionPerformed
        // TODO add your handling code here:
        this.uiStatus.getCellTest().testDebugItem();
    }//GEN-LAST:event_btTestActionPerformed

    private void PanelUpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PanelUpKeyTyped
        // TODO add your handling code here:
        System.out.println(evt.getKeyCode());
    }//GEN-LAST:event_PanelUpKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelUp;
    private javax.swing.JProgressBar Process;
    private javax.swing.JButton btTest;
    private javax.swing.JLabel lbItemName;
    private javax.swing.JLabel lbTime;
    private javax.swing.JPanel panelDown;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setText(String txt) {
    }

    @Override
    public void updateData() {
        if (list != null && !list.isEmpty()) {
            this.Process.setValue(list.size());
            lbItemName.setText(list.get(list.size()-1).getFunctionName().getItemName());
        }
        lbTime.setText(getTestTime());
    }

}
