2023-02-03 08:15:00.282:   ITEM[CreateJson_1] - FUNCTION[CreateJsonApiProxy]
2023-02-03 08:15:00.282:   Turn: 1
2023-02-03 08:15:00.283:   [PC] Follow limit: false
2023-02-03 08:15:00.283:   [PC] Use the limit errorcode: true
2023-02-03 08:15:00.283:   [PC] Root: error_details = sn_ok
2023-02-03 08:15:00.283:   [PC] -----------------------------------------
2023-02-03 08:15:00.284:   [PC] Root: status = failed
2023-02-03 08:15:00.284:   [PC] -----------------------------------------
2023-02-03 08:15:00.284:   [PC] Root: finish_time = 2023-02-03 08:15:00
2023-02-03 08:15:00.285:   [PC] -----------------------------------------
2023-02-03 08:15:00.286:   [PC] Root: test_software_version = null
2023-02-03 08:15:00.286:   [PC] -----------------------------------------
2023-02-03 08:15:00.286:   [PC] Root: start_time = 2023-02-03 08:14:58
2023-02-03 08:15:00.286:   [PC] -----------------------------------------
2023-02-03 08:15:00.286:   [PC] Root: station_type = REPAIR
2023-02-03 08:15:00.286:   [PC] -----------------------------------------
2023-02-03 08:15:00.286:   [PC] Root: error_code = -1
2023-02-03 08:15:00.286:   [PC] -----------------------------------------
2023-02-03 08:15:00.286:   [PC] Root: serial = null
2023-02-03 08:15:00.287:   [PC] -----------------------------------------
2023-02-03 08:15:00.287:   [PC] Root: mode = Debug
2023-02-03 08:15:00.287:   [PC] -----------------------------------------
2023-02-03 08:15:00.287:   [PC] Root: station_name = REPAIR-7801
2023-02-03 08:15:00.287:   [PC] -----------------------------------------
2023-02-03 08:15:00.287:   [PC] Root: position = main
2023-02-03 08:15:00.287:   [PC] -----------------------------------------
2023-02-03 08:15:00.287:   [PC] Root: cycle_time = 1.998
2023-02-03 08:15:00.287:   [PC] -----------------------------------------
2023-02-03 08:15:00.287:   [PC] Root: cyctime_final = 1.998
2023-02-03 08:15:00.288:   [PC] -----------------------------------------
2023-02-03 08:15:00.294:   [PC] ItemTest: dut_ping = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"0.070","upper_limit":"","error_code":"","units":"","test_name":"dut_ping","finish_time":"2023-02-03 08:14:58","test_value":"passed","status":"passed"}
2023-02-03 08:15:00.295:   [PC] ItemTest: dut_telnet = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"0.341","upper_limit":"","error_code":"","units":"","test_name":"dut_telnet","finish_time":"2023-02-03 08:14:58","test_value":"passed","status":"passed"}
2023-02-03 08:15:00.295:   [PC] ItemTest: test_image_version = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"0.580","upper_limit":"","error_code":"","units":"","test_name":"test_image_version","finish_time":"2023-02-03 08:14:59","test_value":"V1.3.0.74","status":"passed"}
2023-02-03 08:15:00.295:   [PC] ItemTest: sn_ok = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"0.675","upper_limit":"","error_code":"-1","units":"","test_name":"sn_ok","finish_time":"2023-02-03 08:14:59","test_value":"GGB1UD2230521ES3","status":"failed"}
2023-02-03 08:15:00.295:   [PC] ItemTest: mac_ok = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"0.687","upper_limit":"","error_code":"-1","units":"","test_name":"mac_ok","finish_time":"2023-02-03 08:14:59","test_value":"d4:3f:32:b8:10:80","status":"failed"}
2023-02-03 08:15:00.296:   [PC] ItemTest: temp_eth = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"1.552","upper_limit":"","error_code":"-1","units":"","test_name":"temp_eth","finish_time":"2023-02-03 08:15:00","test_value":"null","status":"failed"}
2023-02-03 08:15:00.296:   [PC] ItemTest: temp_cpu = {"start_time":"2023-02-03 08:14:58","lower_limit":"","cycle_time":"1.554","upper_limit":"","error_code":"-1","units":"","test_name":"temp_cpu","finish_time":"2023-02-03 08:15:00","test_value":"failed","status":"failed"}
2023-02-03 08:15:00.296:   [PC] ItemTest: shop_floor = {"start_time":"2023-02-03 08:15:00","lower_limit":"","cycle_time":"0.004","upper_limit":"","error_code":"","units":"","test_name":"shop_floor","finish_time":"2023-02-03 08:15:00","test_value":"passed","status":"passed"}
2023-02-03 08:15:00.296:   [PC] ItemTest: CreateTxt_1 = {"start_time":"2023-02-03 08:15:00","lower_limit":"","cycle_time":"0.011","upper_limit":"","error_code":"","units":"","test_name":"CreateTxt_1","finish_time":"2023-02-03 08:15:00","test_value":"passed","status":"passed"}
2023-02-03 08:15:00.296:   [PC] ElementName: [mlbsn, sn, position, status, mode, finish_time]
2023-02-03 08:15:00.298:   [PC] Format for json data!
2023-02-03 08:15:00.300:   [PC] Save data in: Log/TestLog/mlbsn_sn_main_failed_Debug_2023-02-03-08-15-00.json ok
2023-02-03 08:15:00.301:   ****************************************************
2023-02-03 08:15:00.301:   Item name = CreateJson_1
2023-02-03 08:15:00.301:   Value = passed
2023-02-03 08:15:00.301:   Test status = passed
2023-02-03 08:15:00.301:   -----------------------------------------------------
2023-02-03 08:15:00.301:   ****************************************************
2023-02-03 08:15:00.302:   TIME[0.020 s] - STATUS[PASSED]
